### 유저 토큰 발급 API

# Case 1: 토큰 발급 성공
POST {{host}}/reservation-token
Content-Type: application/json

{
  "userId": "1"
}
> {%
    client.test("Validate", function() {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.contentType.mimeType === "application/json", "Expected 'application/json'");
        client.assert(response.body.data.token.trim().length > 0);
    });

    client.log(response.body.data.token);
    client.global.set("accessToken",response.body.data.token)
%}

###

# Case 2: 토큰 발급 실패
POST {{host}}/reservation-token
Content-Type: application/json

{
  "userId": "-999"
}


### 유저 토큰 상태 조회

# Case 1: 정상 확인
GET {{host}}/reservation-token/status
X-Reservation-Queue-Token: {{accessToken}}

###

# Case 2: 유효하지 않은 USER-TOKEN
GET {{host}}/reservation-token/status
X-Reservation-Queue-Token: invalid-token

###

# Case 3: 만료된 토큰
GET {{host}}/reservation-token/status
X-Reservation-Queue-Token: {{accessToken}}
